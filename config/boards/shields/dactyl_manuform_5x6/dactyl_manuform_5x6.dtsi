#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <5>; // 4 finger rows + 1 thumb row
        map = <
        // Left Hand                                                              // Right Hand
        RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)      RC(0,11) RC(0,10) RC(0,9) RC(0,8) RC(0,7) RC(0,6)
        RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)      RC(1,11) RC(1,10) RC(1,9) RC(1,8) RC(1,7) RC(1,6)
        RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)      RC(2,11) RC(2,10) RC(2,9) RC(2,8) RC(2,7) RC(2,6)
        RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)      RC(3,11) RC(3,10) RC(3,9) RC(3,8) RC(3,7) RC(3,6)
                        RC(4,0) RC(4,1) RC(4,2)             RC(4,9) RC(4,8) RC(4,7)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";

        // Your provided wiring translated to ZMK's &pro_micro numbers
        col-gpios
            = <&pro_micro 1 (GPIO_ACTIVE_HIGH)>     // Col 0: P1.06
            , <&pro_micro 3 (GPIO_ACTIVE_HIGH)>     // Col 1: P1.04
            , <&pro_micro 4 (GPIO_ACTIVE_HIGH)>     // Col 2: P0.11
            , <&pro_micro 5 (GPIO_ACTIVE_HIGH)>     // Col 3: P1.00
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH)>     // Col 4: P0.24
            , <&pro_micro 2 (GPIO_ACTIVE_HIGH)>     // Col 5: P0.22
            ;

        row-gpios
            = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // Row 0: P0.10
            , <&pro_micro 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // Row 1: P1.11
            , <&pro_micro 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // Row 2: P1.13
            , <&pro_micro 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // Row 3: P1.15
            , <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   // Row 4 (Thumb): P0.09
            ;
    };
};

/*
================================================================================
== Custom I2C Bus Definition for Split Communication ==
================================================================================
This re-defines the default I2C channel (i2c0) to use your handwired pins.
*/
&i2c0 {
    status = "okay";
    clock-frequency = <I2C_BITRATE_FAST>;

    // SCL pin wired to P0.20
    scl-pin = <NRF_GPIO_PIN_MAP(0, 20)>;

    // SDA pin wired to P0.17
    sda-pin = <NRF_GPIO_PIN_MAP(0, 17)>;
};
