#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <5>;
        /*
         * This map describes how your physical key presses are translated
         * into a logical grid for the keymap below. It is designed to match
         * the physical layout of your Dactyl Manuform.
         */
        map = <
        // Left Hand                                                              // Right Hand
        RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)      RC(0,11) RC(0,10) RC(0,9)  RC(0,8) RC(0,7) RC(0,6)
        RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)      RC(1,11) RC(1,10) RC(1,9)  RC(1,8) RC(1,7) RC(1,6)
        RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)      RC(2,11) RC(2,10) RC(2,9)  RC(2,8) RC(2,7) RC(2,6)
        // Bottom finger row keys
                        RC(3,2) RC(3,3)                                        RC(3,9)  RC(3,8)
        // Two thumb keys on the bottom finger row (phys row 3, cols 4 & 5)
                                        RC(3,4) RC(3,5)      RC(3,11) RC(3,10)
        // Four thumb keys on the dedicated thumb row (phys row 4, cols 2,3,4,5)
                                        RC(4,4) RC(4,5)      RC(4,11) RC(4,10)
                                        RC(4,2) RC(4,3)      RC(4,9)  RC(4,8)

                                                                
                                         
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";

        col-gpios = <&gpio0 1 0x0>, <&gpio0 3 0x0>, <&gpio0 4 0x0>, <&gpio0 5 0x0>, <&gpio0 6 0x0>, <&gpio0 2 0x0>;
        row-gpios = <&gpio0 10 0x2>, <&gpio0 16 0x2>, <&gpio0 14 0x2>, <&gpio0 21 0x2>, <&gpio0 9 0x2>;
    };
};



// Custom I2C Bus Definition for Split Communication
&uart0 {
    status = "okay";
    current-speed = <115200>;
};

/ {
    behaviors {
        reset: reset_behavior {
            compatible = "zmk,behavior-reset";
            #binding-cells = <0>;
        };
    };
};

